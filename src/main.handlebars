<!DOCTYPE html>
<html>

  {{> head}}

  <body>
    <div class="container full-height">
      <div class="row full-size-row">
        <div class="side-bar twelve columns">
          <div>
            <div class="blurb">
              <div class="image">
                <img src="images/avatar.png" />
              </div>
              <div class="details">
                <h1>Chris Gregori</h1>
                <h2>Full-Stack Software Engineer</h2>
                <h3>
                  <div class="type-wrap">
                    <div id="typed-strings"></div>
                    <span id="typed" style="white-space:pre;"></span>
                  </div>
                </h3>
              </div>
            </div>
          </div>
          <div class="main-info">
            <div class="about">
              <div class="sub-area">
                <h3>Experience</h3>
                <ul>
                  {{#work}}
                    <li>
                      <p class="with-sub-heading">{{this.company}} - {{this.role}}</p>
                      <p><b>{{this.date.start}} - {{this.date.end}}</b></p>
                    </li>
                  {{/work}}
                  <li>
                    <p><a href="experience.html">More Information</a></p>
                  </li>
                </ul>
              </div>
              <div class="sub-area">
                <h3>Education</h3>
                <ul>
                  <li>
                    <p class="with-sub-heading">Software Engineering BSc</p>
                    <p><b>1st Class Honours - City University London</b></p>
                  </li>
                  <li>
                    <p><a href="education.html">More Information</a></p>
                  </li>
                </ul>
              </div>
            </div>

            <div class="about">
              <div class="sub-area">
                <h3>Projects</h3>
                <ul>
                  <li>
                    <p><a href="projects.html">Sites, Apps & Code</a></p>
                  </li>
                  <li>
                    <p class="github-projects-title">Github Projects - 0</p>
                    <ul class="github-projects">

                    </ul>
                  </li>
                </ul>
              </div>


              <div class="sub-area">
                <h3>Photography</h3>
                <ul>
                  <li>
                    <p><a href="{{social.flickr}}">Flickr</a></p>
                  </li>
                  <li>
                    <p><a href="{{social.instagram}}">Instagram</a></p>
                  </li>
                  <li>
                    <p><a href="{{social.society6}}">Society6</a></p>
                  </li>
                </ul>
              </div>
            </div>
          </div>
          <div>
            {{> socialmedia}}
          </div>
        </div>
      </div>
    </div>
    {{> cssref}}
  </body>

  <script async>
    var githubProjects = document.querySelector('.github-projects-title');
    if (typeof(githubProjects) != 'undefined' && githubProjects != null){
      populateGithubProjects();
    }

    function populateGithubProjects() {
      const root = 'https://api.github.com';

      fetch(root + '/users/chrisgreg/repos')
        .then(getRepos)
  			.then(renderMetaData)
        .then(getLanguageStats);

      function getRepos(response) {
        return response.json().then((json) => {
          var repos = formatRepos(json);
          return repos;
        })
      }

      function renderMetaData(repos) {
        var githubProjectsTitle = document.querySelector('.github-projects-title');
        githubProjectsTitle.innerHTML = 'Github Projects - <a href="{{social.github}}">' + repos.length + '</a>';
        return repos;
      }

      function getLanguageStats(repos) {
        var projects = document.querySelector('.github-projects');
        var languages = Object.keys(repos).map(a => repos[a].language)
        var languageOccurances = new Map([...new Set(languages)].map(
          x => [x, languages.filter(y => y === x).length]
        ));

        languageOccurances.forEach((a,b) => {
          let occurance = a;
          let language = b;
          var element = document.createElement('p');
          element.innerHTML = `<b>${language}:</b> ${occurance}`;
          projects.appendChild(element);
        })
      }

      function formatRepos(json) {
        return json.map(repo => {
          return {
            id: repo.id,
            created_date: repo.created_at,
            url: repo.html_url,
            description: repo.description || 'No description available',
            name: repo.name,
            stars: repo.stargazers_count,
            watchers: repo.watchers,
            language: repo.language
          }
        });
      }
    }
</script>

</html>
